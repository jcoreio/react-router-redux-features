// @flow

import type {Store} from 'redux'
import type {PlainRoute} from 'react-router'
import {createSelector} from 'reselect'
import type {Feature, Features, FeatureStates} from 'redux-features'
import type {FeatureStateAlert as _FeatureStateAlert} from './index'

import type {GetRoute} from './wrapRoute'

export type FirstOptions<S, A> = {
  isServer?: boolean,
  getFeatureStates?: (state: S) => FeatureStates,
  getFeatures?: (state: S) => Features<S, A>,
  rematchRoutes?: (store: Store<S, A>) => any,
  FeatureStateAlert?: _FeatureStateAlert,
}

export type SecondOptions<S, A> = {
  store: Store<S, A>,
  featureId: string,
  featureName: string,
  getRoute: GetRoute<S, A>,
}

declare export default function createFeatureRoute<S, A>(
  options: FirstOptions<S, A>
): (options: SecondOptions<S, A>) => PlainRoute;

